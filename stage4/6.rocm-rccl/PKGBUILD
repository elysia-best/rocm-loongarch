pkgbase='rocm-rccl'
pkgname=('rocm-rccl')
pkgver=6.4.3
pkgrel=643000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64' 'riscv64')
license=('MIT')
url="https://github.com/ROCm/ROCT-Thunk-Interface.git"

source=(
    "git+https://github.com/ROCm/rccl.git#tag=rocm-$pkgver"
    "0001-rccl-loongarch.patch"
)
b2sums=('SKIP' 'SKIP')
depends=("rocm-clr=${pkgver}" "rocm-HIPIFY=${pkgver}" "rocm_smi_lib=${pkgver}")
# MSCCLPP choose
PATH=/opt/rocm-${pkgver}/bin:$PATH
ROCM_PATH=/opt/rocm-$pkgver
prepare() {
  cd rccl
    git apply ../0001-rccl-loongarch.patch
  cd ..
  cat  > toolchain.cmake << EOF
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_C_FLAGS "$CFLAGS")
set(CMAKE_CXX_FLAGS "$CFLAGS -parallel-jobs=$(nproc)")
set(CMAKE_BUILD_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_INSTALL_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_FIND_ROOT_PATH "/opt/rocm-${pkgver}/")
set(CMAKE_C_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang")
set(CMAKE_CXX_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/amdclang++")
set(CMAKE_SHARED_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64")
set(CMAKE_EXE_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64")
EOF

  rm -rf build || true
  mkdir build || true
  cd build
  if [ -n $GPU_TARGETS ] && [ $GPU_TARGETS != 'all' ]; then 
    targetSet=( -DGPU_TARGETS=$GPU_TARGETS )
  else
    targetSet=( )
  fi
  cmake ../rccl \
   -DCMAKE_TOOLCHAIN_FILE=$PWD/../toolchain.cmake \
   -DCMAKE_INSTALL_PREFIX=/opt/rocm-${pkgver} \
   -DBUILD_LOCAL_GPU_TARGET_ONLY=OFF \
   -DROCM_PATH=/opt/rocm-${pkgver}/ \
   -DRCCL_ROCPROFILER_REGISTER=On \
   -DENABLE_MSCCLPP=OFF \
   -DENABLE_MSCCL_KERNEL=OFF \
   ${targetSet[@]} \
  -G "Unix Makefiles"
  
}
build() {
  mkdir build || true
  cd build
  make -j$(nproc)
}

check() {
#  cd "ROCm-CompilerSupport"
#  cd build
#  make ctest
echo
}

#packaging() {

#}
package() {
  cd build
  make DESTDIR="$pkgdir/" install
}

