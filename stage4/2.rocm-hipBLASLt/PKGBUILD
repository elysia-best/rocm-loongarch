pkgbase='rocm-hipBLASLt'
pkgname=('rocm-hipBLASLt')
pkgver=6.4.3
pkgrel=643000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64' 'riscv64')
license=('MIT')
url="https://github.com/ROCm/hipBLASLt.git"

source=(
    "git+https://github.com/ROCm/hipBLASLt.git#tag=rocm-$pkgver"
    "0001-hipblaslt-support-other-arch.patch"
    "0002-hipblaslt-6.4.1-upstream-clang-fix-gfx120x-failed.patch"
)
b2sums=('SKIP' 'SKIP' 'SKIP')
depends=("rocm-clr=${pkgver}" "rocm-hipBLAS-common=${pkgver}")
export PATH=$PWD/src/build/virtualenv/bin:/opt/rocm-${pkgver}/bin:/opt/rocm-${pkgver}/lib/llvm/bin:$PATH
export ROCM_PATH=/opt/rocm-${pkgver}/
#export LD_LIBRARY_PATH=$ROCM_PATH/lib64:$LD_LIBRARY_PATH
prepare() {
  cd hipBLASLt
    git apply ../*.patch
  cd ..
  mkdir build || true
  if [ -n $GPU_TARGETS ] && [ $GPU_TARGETS != 'all' ]; then 
    targetSet=( -DAMDGPU_TARGETS=$GPU_TARGETS -DTensile_ARCHITECTURE=$GPU_TARGETS )
  else
    targetSet=( )
  fi
  CFLAGS="-pipe -fPIC "
  cat  > toolchain.cmake << EOF
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_C_FLAGS "$CFLAGS")
set(CMAKE_CXX_FLAGS "$CFLAGS -parallel-jobs=$(nproc)")
set(CMAKE_BUILD_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_INSTALL_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_FIND_ROOT_PATH "/opt/rocm-${pkgver}/")
set(CMAKE_C_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang")
set(CMAKE_CXX_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/amdclang++")
set(CMAKE_SHARED_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64")
set(CMAKE_EXE_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64")
EOF

  cd build
  cmake ../hipBLASLt \
   -DROCM_PATH=/opt/rocm-${pkgver} \
   -DCMAKE_PREFIX_PATH="/opt/rocm-${pkgver}/;/usr" \
   -DCMAKE_INSTALL_PREFIX=/opt/rocm-${pkgver} \
   -DBUILD_CLIENTS_SAMPLES=ON \
   -DBUILD_CLIENTS_TESTS=OFF \
   -DBUILD_CLIENTS_BENCHMARKS=ON \
   -DCMAKE_TOOLCHAIN_FILE=$PWD/../toolchain.cmake \
   -DTensile_ENABLE_MARKER=ON \
   -DTensile_EXPERIMENTAL=ON \
   ${targetSet[@]} \
  -G "Unix Makefiles"
}
build() {
  mkdir build || true
  cd build
  make -j$(nproc)
}

check() {
echo
}

package() {
  cd build
  make DESTDIR="$pkgdir/" install
}

