pkgbase='rocm-flang-classic'
pkgname=('rocm-flang-classic')
pkgver=6.3.1
pkgrel=631000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64' 'riscv64')
license=('Apache')
url="https://github.com/ROCm/llvm-project"
provides=('rocm-llvm-core' 'rocm-llvm-extra')
source=(
    "git+https://github.com/ROCm/flang#tag=rocm-$pkgver"
    "flang.patch"
)
b2sums=('SKIP' 'SKIP')
export LD_LIBRARY_PATH=/opt/rocm-${pkgver}/lib64:$LD_LIBRARY_PATH
prepare() {
  cd flang
    git apply ../flang.patch
  cd ..
  mkdir build || true
  PATH=/opt/rocm-${pkgver}/lib/llvm/bin:$PATH
  ROCM_PATH=/opt/rocm-${pkgver}
  cd build
    mkdir flang-legacy
    cd flang-legacy
      cmake $PWD/../../flang/flang-legacy/ -G Ninja \
       -DCMAKE_BUILD_RPATH="/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib" \
       -DCMAKE_INSTALL_RPATH="/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib" \
       -DCMAKE_C_COMPILER=clang \
       -DCMAKE_CXX_COMPILER=clang++ \
       -DCMAKE_CXX_FLAGS="-stdlib=libc++ -I/opt/rocm-${pkgver}/lib/llvm/include" \
       -DCMAKE_INSTALL_PREFIX="/opt/rocm-${pkgver}/lib/llvm/" \
       -DCMAKE_LINKER_TYPE=LLD \
       -DCMAKE_FIND_ROOT_PATH=/opt/rocm-${pkgver}/  \
       -DCMAKE_BUILD_TYPE=Release \
       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON 
    cd ..
    mkdir flang
    cd flang
      cmake $PWD/../../flang/ -G Ninja \
       -DCMAKE_BUILD_RPATH="/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib" \
       -DCMAKE_INSTALL_RPATH="/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib" \
       -DCMAKE_C_COMPILER=clang \
       -DCMAKE_CXX_COMPILER=clang++ \
       -DCMAKE_CXX_FLAGS="-stdlib=libc++ -I/opt/rocm-${pkgver}/lib/llvm/include" \
       -DCMAKE_INSTALL_PREFIX="/opt/rocm-${pkgver}/lib/llvm/" \
       -DCMAKE_LINKER_TYPE=LLD \
       -DCMAKE_FIND_ROOT_PATH=/opt/rocm-${pkgver}/  \
       -DCMAKE_BUILD_TYPE=Release \
       -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
    cd ..
  cd ..

}
build() {
  cd build
     cd flang-legacy
       ninja 
     cd ..
     cd flang
       ninja
     cd ..
  cd ..
}

check() {
#  cd build
#  ninja check
echo
}

#packaging() {

#}
package() {
  cd build
    cd flang-legacy
      cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}/lib/llvm/
    cd ..
    cd flang

    cd ..
  cd ..
}

