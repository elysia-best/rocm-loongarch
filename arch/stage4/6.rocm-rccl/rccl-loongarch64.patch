diff --git a/CMakeLists.txt b/CMakeLists.txt
index 966c5ccc..74a51b88 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -784,23 +784,7 @@ if(ENABLE_MSCCLPP)
 endif()
 
 ## Set RCCL link options
-## Find out available memory
-execute_process(
-  COMMAND bash "-c" "cat /sys/fs/cgroup/memory.max"
-  OUTPUT_VARIABLE memory_max_string)
-if (${memory_max_string} MATCHES "^[0-9]+")
-  math(EXPR memory_in_gb "${memory_max_string} / (1024 * 1024 * 1024)")
-else()
-  execute_process(
-    COMMAND bash "-c" "cat /sys/fs/cgroup/memory/memory.limit_in_bytes"
-    OUTPUT_VARIABLE memory_max_string)
-  if (${memory_max_string} MATCHES "^[0-9]+")
-    math(EXPR memory_in_gb "${memory_max_string} / (1024 * 1024 * 1024)")
-  else()
-    cmake_host_system_information(RESULT memory_max_string QUERY AVAILABLE_PHYSICAL_MEMORY )
-    math(EXPR memory_in_gb "${memory_max_string} / 1024")
-  endif()
-endif()
+set (memory_in_gb 128 )
 ## Reserve 16GB for each linker job. Limit max number of linker jobs to 16
 math(EXPR num_linker_jobs "(${memory_in_gb} + 15) / 16")
 if (${num_linker_jobs} GREATER_EQUAL "16")
diff --git a/src/include/gdrwrap.h b/src/include/gdrwrap.h
index a7583114..e10ffe65 100644
--- a/src/include/gdrwrap.h
+++ b/src/include/gdrwrap.h
@@ -41,7 +41,7 @@ static inline void wc_store_fence(void) { asm volatile("sync") ; }
 #elif defined(__x86_64__)
 #include <immintrin.h>
 static inline void wc_store_fence(void) { _mm_sfence(); }
-#elif defined(__aarch64__)
+#elif defined(__aarch64__) || defined(__loongarch_lp64)
 #ifdef __cplusplus
 #include <atomic>
 static inline void wc_store_fence(void) { std::atomic_thread_fence(std::memory_order_release); }
