pkgbase='rocm-llvm-core'
pkgname=('rocm-llvm-core')
pkgver=6.3.1
pkgrel=631000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64' 'riscv64')
license=('Apache')
url="https://github.com/ROCm/llvm-project"
provides=('rocm-compilersupport' 'rocm-device-libs')
source=(
    "git+https://github.com/ROCm/llvm-project.git#tag=rocm-$pkgver"
    "loongarch.patch"
    "https://github.com/llvm/llvm-project/commit/51e91b64d0deb6a743861c2a0fba84865250036e.patch"
)
b2sums=('SKIP' 'SKIP' 'SKIP')
#prepare() {
#echo
#}
TARGET="AMDGPU;NVPTX;"
TARGET="$TARGET;LoongArch;"
TARGET="$TARGET;X86;"
TARGET="$TARGET;RISCV;"
prepare() {
  cd llvm-project
    git apply ../loongarch.patch
    git apply ../51e91b64d0deb6a743861c2a0fba84865250036e.patch
  cd ..
  mkdir build || true
  cd build
  EXT_CFLAGS="-pipe -Wno-missing-template-arg-list-after-template-kw"
  if [ $CARCH == 'loong64' ];
  then
    EXT_CFLAGS="-mcmodel=medium $EXT_CFLAGS"
  fi
  cmake \
  -DCMAKE_C_COMPILER=clang \
  -DCMAKE_CXX_COMPILER=clang++ \
  -DCMAKE_BUILD_TYPE=RelWithDebInfo \
  -DCMAKE_C_FLAGS="$EXT_CFLAGS" \
  -DCMAKE_CXX_FLAGS="$EXT_CFLAGS" \
  -DCMAKE_INSTALL_PREFIX="/opt/rocm-${pkgver}/lib/llvm" \
  -DLLVM_ENABLE_ASSERTIONS=1 \
  -DLLVM_TARGETS_TO_BUILD="$TARGET" \
  -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind" \
  -DCMAKE_INSTALL_RPATH="/opt/rocm-${pkgver}/lib/llvm/lib" \
  -DCMAKE_BUILD_RPATH="/opt/rocm-${pkgver}/lib/llvm/lib" \
  -DPROJECT_VERSION_MAJOR=6 \
  -DPROJECT_VERSION_MINOR=3 \
  -DPROJECT_VERSION_PATCH=1 \
  -DBUILD_SHARED_LIBS=ON \
  -DLLVM_ENABLE_LIBCXX=ON \
  -DLIBCXX_ENABLE_SHARED=ON \
  -DLIBCXX_ENABLE_STATIC=ON \
  -DLIBCXXABI_ENABLE_SHARED=ON \
  -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
  -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
  -DRUNTIMES_CMAKE_ARGS="-DCMAKE_INSTALL_RPATH='/opt/rocm-${pkgver}/lib/llvm/lib';-DCMAKE_BUILD_RPATH='/opt/rocm-${pkgver}/lib/llvm/lib';-DBUILD_RPATH_USE_ORIGIN=OFF;-DLLVM_ENABLE_PIC=ON" \
  -G "Ninja" \
  -DLLVM_ENABLE_PIC=ON \
  -S ../llvm-project/llvm/
  sed -i "s!-lamdhip64!/opt/rocm-$pkgver/lib64/libamdhip64.so!g" ../llvm-project/clang/lib/Driver/ToolChains/Linux.cpp
}
build() {
  cd build
CC=clang CXX=clang++  cmake --build .
}

check() {
#  cd build
#  ninja check
echo
}

#packaging() {

#}
package() {
  cd build
  cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}/lib/llvm
}

