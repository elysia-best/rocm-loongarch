diff --git a/hipamd/src/hip_embed_pch.sh b/hipamd/src/hip_embed_pch.sh
index 9b01da872..79b095634 100755
--- a/hipamd/src/hip_embed_pch.sh
+++ b/hipamd/src/hip_embed_pch.sh
@@ -149,16 +149,16 @@ EOF
 
   cat $tmp/hip_macros.h >> $tmp/pch_wave32.cui &&
 
-  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple x86_64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave32.pch -x hip-cpp-output - <$tmp/pch_wave32.cui &&
+  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple riscv64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave32.pch -x hip-cpp-output - <$tmp/pch_wave32.cui &&
 
   # For other devices
   $LLVM_DIR/bin/clang -O3 --hip-path=$HIP_INC_DIR/.. -std=c++17 -nogpulib -isystem $HIP_INC_DIR -isystem $HIP_BUILD_INC_DIR -isystem $HIP_AMD_INC_DIR --cuda-device-only -x hip $tmp/hip_pch.h -E >$tmp/pch_wave64.cui &&
 
   cat $tmp/hip_macros.h >> $tmp/pch_wave64.cui &&
 
-  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple x86_64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave64.pch -x hip-cpp-output - <$tmp/pch_wave64.cui &&
+  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple riscv64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave64.pch -x hip-cpp-output - <$tmp/pch_wave64.cui &&
 
-  $LLVM_DIR/bin/llvm-mc -o hip_pch.o $tmp/hip_pch.mcin --filetype=obj &&
+  $LLVM_DIR/bin/llvm-mc  -target-abi=lp64d -triple=riscv64 -mattr=+d -o hip_pch.o $tmp/hip_pch.mcin --filetype=obj &&
 
   rm -rf $tmp
 }
@@ -205,7 +205,7 @@ EOF
   set -x
   $LLVM_DIR/bin/clang -O3 --hip-path=$HIP_INC_DIR/.. -std=c++14 -nogpulib --hip-version=4.4 -isystem $HIP_INC_DIR -isystem $HIP_BUILD_INC_DIR -isystem $HIP_AMD_INC_DIR --cuda-device-only -D__HIPCC_RTC__ -x hip $tmp/hipRTC_header.h -E -P -o $tmp/hiprtc &&
   cat $macroFile >> $tmp/hiprtc &&
-  $LLVM_DIR/bin/llvm-mc -o $tmp/hiprtc_header.o $tmp/hipRTC_header.mcin --filetype=obj &&
+  $LLVM_DIR/bin/llvm-mc  -target-abi=lp64d -triple=riscv64 -mattr=+d -o $tmp/hiprtc_header.o $tmp/hipRTC_header.mcin --filetype=obj &&
   $LLVM_DIR/bin/clang $tmp/hiprtc_header.o -o $rtc_shared_lib_out -shared &&
   $LLVM_DIR/bin/clang -O3 --hip-path=$HIP_INC_DIR/.. -std=c++14 -nogpulib -nogpuinc -emit-llvm -c -o $tmp/tmp.bc --cuda-device-only -D__HIPCC_RTC__ --offload-arch=gfx906 -x hip-cpp-output $tmp/hiprtc &&
   rm -rf $tmp
diff --git a/hipamd/src/hip_graph_internal.cpp b/hipamd/src/hip_graph_internal.cpp
index ebcf4c91e..94af31418 100644
--- a/hipamd/src/hip_graph_internal.cpp
+++ b/hipamd/src/hip_graph_internal.cpp
@@ -443,9 +443,17 @@ hipError_t GraphExec::CaptureAQLPackets() {
                  kernarg_pool_size_graph_ != 0) {
         address dev_ptr = kernarg_pool_graph_ + kernarg_pool_size_graph_;
         auto kSentinel = *reinterpret_cast<volatile unsigned char*>(dev_ptr - 1);
+#if defined(__x86_64__)
         _mm_sfence();
+#else
+        asm("fence rw,rw");
+#endif
         *(dev_ptr - 1) = kSentinel;
+#if defined(__x86_64__)
         _mm_mfence();
+#else
+        asm("fence rw,rw");
+#endif
         kSentinel = *reinterpret_cast<volatile unsigned char*>(dev_ptr - 1);
       }
     }
diff --git a/hipamd/src/hiprtc/CMakeLists.txt b/hipamd/src/hiprtc/CMakeLists.txt
index 60799f4ab..77d2a6825 100644
--- a/hipamd/src/hiprtc/CMakeLists.txt
+++ b/hipamd/src/hiprtc/CMakeLists.txt
@@ -184,7 +184,7 @@ add_custom_command(
   DEPENDS clang ${HIPRTC_GEN_HEADER})
 add_custom_command(
   OUTPUT ${HIPRTC_GEN_OBJ}
-  COMMAND $<TARGET_FILE:llvm-mc> -o ${HIPRTC_GEN_OBJ} ${HIPRTC_GEN_MCIN} --filetype=obj
+  COMMAND $<TARGET_FILE:llvm-mc>  -target-abi=lp64d -triple=riscv64 -mattr=+d -o ${HIPRTC_GEN_OBJ} ${HIPRTC_GEN_MCIN} --filetype=obj
   DEPENDS llvm-mc ${HIPRTC_GEN_PREPROCESSED} ${HIPRTC_GEN_MCIN})
 
 # Create hiprtc-builtins library.
diff --git a/rocclr/device/rocm/rocvirtual.cpp b/rocclr/device/rocm/rocvirtual.cpp
index 169e81e65..d8156e3a5 100644
--- a/rocclr/device/rocm/rocvirtual.cpp
+++ b/rocclr/device/rocm/rocvirtual.cpp
@@ -3247,9 +3247,18 @@ bool VirtualGPU::submitKernelInternal(const amd::NDRangeContainer& sizes,
           auto kSentinel = *reinterpret_cast<volatile int*>(dev().info().hdpMemFlushCntl);
         } else if (kernArgImpl == KernelArgImpl::DeviceKernelArgsReadback &&
                    argSize != 0) {
+#if defined(__x86_64__)
           _mm_sfence();
+#else
+          asm("fence rw,rw");
+#endif
           *(argBuffer + argSize - 1) = *(parameters + argSize - 1);
+#if defined(__x86_64__)
           _mm_mfence();
+#else
+          asm("fence rw,rw");
+#endif
+
           auto kSentinel = *reinterpret_cast<volatile unsigned char*>(
               argBuffer + argSize - 1);
         }
diff --git a/rocclr/os/os_posix.cpp b/rocclr/os/os_posix.cpp
index 739795e0c..8e4863887 100644
--- a/rocclr/os/os_posix.cpp
+++ b/rocclr/os/os_posix.cpp
@@ -318,8 +318,10 @@ void Os::currentStackInfo(address* base, size_t* size) {
 
   ::pthread_attr_destroy(&threadAttr);
 
+#if !defined(__loongarch64) && !defined(__riscv)
   assert(Os::currentStackPtr() >= *base - *size && Os::currentStackPtr() < *base &&
          "just checking");
+#endif
 }
 
 void Os::setCurrentThreadName(const char* name) { ::prctl(PR_SET_NAME, name); }
