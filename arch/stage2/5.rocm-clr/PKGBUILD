pkgbase='rocm-clr'
pkgname=('rocm-clr')
pkgver=6.3.1
pkgrel=631000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64' 'riscv64')
license=('MIT')
url="https://github.com/ROCm/ROCT-Thunk-Interface.git"

source=(
    "git+https://github.com/ROCm/HIP.git#tag=rocm-$pkgver"
    "git+https://github.com/ROCm/clr.git#tag=rocm-$pkgver"
    "clr.patch"
)
b2sums=('SKIP' 'SKIP' 'SKIP')
PATH=/opt/rocm-${pkgver}/bin:/opt/rocm-${pkgver}/lib/llvm/bin:$PATH
depends=("rocm-llvm-extra=${pkgver}"
"rocm-cmake=${pkgver}"
"rocm-rocr-runtime=${pkgver}"
)

prepare() {
  cd clr
    git apply ../clr.patch
    if [ $CARCH == 'loong64' ];
    then
      sed -i 's!x86_64-unknown-linux-gnu!loongarch64-unknown-linux-gnu!g' hipamd/src/hip_embed_pch.sh
    fi
    if [ $CARCH == 'riscv64' ];
    then
      git apply ../clr-riscv.patch
    fi
  cd ..

  mkdir build || true
  cd build

  cmake ../clr/ \
   -DHIP_COMMON_DIR=$PWD/../HIP/ \
   -DHIPCC_BIN_DIR=/opt/rocm-${pkgver}/bin/ \
   -DHIP_PLATFORM=amd \
   -DCLR_BUILD_HIP=ON \
   -DCMAKE_BUILD_TYPE=RelWithDebInfo \
   -DCLR_BUILD_OCL=ON \
   -DBUILD_ICD=ON \
   -DROCM_PATH=/opt/rocm-${pkgver}/ \
   -DCMAKE_C_COMPILER=/opt/rocm-${pkgver}/lib/llvm/bin/clang \
   -DCMAKE_CXX_COMPILER=/opt/rocm-${pkgver}/lib/llvm/bin/clang++ \
   -DCMAKE_INSTALL_RPATH="/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib" \
   -DCMAKE_CXX_FLAGS="-stdlib=libc++" \
   -DCMAKE_FIND_ROOT_PATH=/opt/rocm-${pkgver}/ \
   -DCMAKE_PREFIX_PATH="/opt/rocm-${pkgver}/;/usr" \
   -DCMAKE_INSTALL_PREFIX="/opt/rocm-${pkgver}" \
   -DCMAKE_EXE_LINKER_FLAGS="-L/opt/rocm-${pkgver}/lib" \
   -DHIP_ENABLE_ROCPROFILER_REGISTER=OFF \
   -DCMAKE_LINKER_TYPE=LLD \
   -G "Unix Makefiles"
  sed -i 's!.bat!!g' hipamd/cmake_install.cmake
}
build() {
  mkdir build || true
  cd build
  make -j$(nproc)
}

check() {
#  cd "ROCm-CompilerSupport"
#  cd build
#  make all
#  cd hipamd && ctest
#  cd opencl/khronos/icd && ctest
#  cd opencl/khronos/icd/test && ctest
#  cd opencl/khronos/icd/test/log && ctest
#  cd opencl/khronos/icd/test/driver_stub && ctest
#  cd opencl/khronos/icd/test/loader_test && ctest



echo
}

#packaging() {

#}
package() {
  cd build
  make DESTDIR="$pkgdir/" install
  cd $pkgdir/opt/rocm-$pkgver/bin
  rm hipcc hipcc.bin hipcc.pl hipconfig hipconfig.bin hipconfig.pl hipvars.pm || true
#  cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}
}
