pkgbase='rocm-composable_kernel'
pkgname=('rocm-composable_kernel')
pkgver=6.4.3
pkgrel=643000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64')
license=('MIT')
url="https://github.com/ROCm/ROCT-Thunk-Interface.git"

source=(
    "git+https://github.com/ROCm/composable_kernel.git#tag=rocm-$pkgver"
    "git+https://github.com/google/googletest.git"
    "composable_kernel_loongarch.patch"
)
b2sums=('SKIP' 'SKIP' 'SKIP')
depends=(
  "rocm-clr=${pkgver}"
  "rocm-rocBLAS=${pkgver}"
)
PATH=/opt/rocm-${pkgver}/bin:$PATH

# if set AMDGPU_TARGETS != all
# MIOpen can not use CK
#unset AMDGPU_TARGETS

prepare() {
  cd composable_kernel
    git apply ../composable_kernel_loongarch.patch
  cd ..
  CFLAGS="-fPIC"
  cat  > toolchain.cmake << EOF
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_C_FLAGS "$CFLAGS")
set(CMAKE_CXX_FLAGS "$CFLAGS")
set(CMAKE_BUILD_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_INSTALL_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_FIND_ROOT_PATH "/opt/rocm-${pkgver}/")
set(CMAKE_C_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang")
set(CMAKE_CXX_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/amdclang++")
set(CMAKE_HIP_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/amdclang++")
set(CMAKE_SHARED_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64")
set(CMAKE_EXE_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64")
EOF
  mkdir build || true
  cd build
  cmake ../composable_kernel \
   -DCMAKE_TOOLCHAIN_FILE=$PWD/../toolchain.cmake \
   -DCMAKE_INSTALL_PREFIX=/opt/rocm-${pkgver} \
   -DROCM_WARN_TOOLCHAIN_VAR=OFF \
   -DBUILD_DEV=OFF \
   -DDL_KERNELS=ON \
   -DDPP_KERNELS=ON \
   -DCK_USE_FP8_ON_UNSUPPORTED_ARCH=ON \
   -DAMDGPU_TARGETS=$GPU_TARGETS \
   -DGPU_TARGETS=$GPU_TARGETS \
   -G Ninja
#  -G "Unix Makefiles"

}
build(){
echo 
}
build0() {
  mkdir build || true
  cd build
  ninja  -l$(free -g |tail -n2|head -1|awk '{print int($2/4)}')
}

check() {
#  cd "ROCm-CompilerSupport"
#  cd build
#  make ctest
echo
}

#packaging() {

#}
package() {
  cd build
  cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}
}
